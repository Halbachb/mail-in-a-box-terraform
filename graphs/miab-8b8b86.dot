digraph {
	compound = "true"
	newrank = "true"
	subgraph "root" {
		"[root] digitalocean_domain.miab" [label = "digitalocean_domain.miab", shape = "box"]
		"[root] digitalocean_droplet.miab" [label = "digitalocean_droplet.miab", shape = "box"]
		"[root] digitalocean_floating_ip.miab" [label = "digitalocean_floating_ip.miab", shape = "box"]
		"[root] digitalocean_floating_ip_assignment.miab" [label = "digitalocean_floating_ip_assignment.miab", shape = "box"]
		"[root] digitalocean_record.box" [label = "digitalocean_record.box", shape = "box"]
		"[root] digitalocean_record.ssh" [label = "digitalocean_record.ssh", shape = "box"]
		"[root] digitalocean_spaces_bucket.miab" [label = "digitalocean_spaces_bucket.miab", shape = "box"]
		"[root] digitalocean_ssh_key.miab" [label = "digitalocean_ssh_key.miab", shape = "box"]
		"[root] output.floating_ip_address" [label = "output.floating_ip_address", shape = "note"]
		"[root] provider.digitalocean" [label = "provider.digitalocean", shape = "diamond"]
		"[root] var.do_region" [label = "var.do_region", shape = "note"]
		"[root] var.do_token" [label = "var.do_token", shape = "note"]
		"[root] var.droplet_image" [label = "var.droplet_image", shape = "note"]
		"[root] var.droplet_private_networking" [label = "var.droplet_private_networking", shape = "note"]
		"[root] var.droplet_region" [label = "var.droplet_region", shape = "note"]
		"[root] var.droplet_size" [label = "var.droplet_size", shape = "note"]
		"[root] var.fqdn" [label = "var.fqdn", shape = "note"]
		"[root] var.miab_STORAGE_ROOT" [label = "var.miab_STORAGE_ROOT", shape = "note"]
		"[root] var.spaces_access_id" [label = "var.spaces_access_id", shape = "note"]
		"[root] var.spaces_secret_key" [label = "var.spaces_secret_key", shape = "note"]
		"[root] var.ssh_port" [label = "var.ssh_port", shape = "note"]
		"[root] var.ssh_private_key" [label = "var.ssh_private_key", shape = "note"]
		"[root] digitalocean_domain.miab" -> "[root] provider.digitalocean"
		"[root] digitalocean_domain.miab" -> "[root] var.fqdn"
		"[root] digitalocean_droplet.miab" -> "[root] digitalocean_floating_ip.miab"
		"[root] digitalocean_droplet.miab" -> "[root] digitalocean_spaces_bucket.miab"
		"[root] digitalocean_droplet.miab" -> "[root] digitalocean_ssh_key.miab"
		"[root] digitalocean_droplet.miab" -> "[root] provisioner.remote-exec"
		"[root] digitalocean_droplet.miab" -> "[root] var.droplet_image"
		"[root] digitalocean_droplet.miab" -> "[root] var.droplet_private_networking"
		"[root] digitalocean_droplet.miab" -> "[root] var.droplet_size"
		"[root] digitalocean_droplet.miab" -> "[root] var.miab_STORAGE_ROOT"
		"[root] digitalocean_droplet.miab" -> "[root] var.ssh_port"
		"[root] digitalocean_floating_ip.miab" -> "[root] provider.digitalocean"
		"[root] digitalocean_floating_ip.miab" -> "[root] var.do_region"
		"[root] digitalocean_floating_ip_assignment.miab" -> "[root] digitalocean_droplet.miab"
		"[root] digitalocean_record.box" -> "[root] digitalocean_domain.miab"
		"[root] digitalocean_record.box" -> "[root] digitalocean_floating_ip.miab"
		"[root] digitalocean_record.ssh" -> "[root] digitalocean_droplet.miab"
		"[root] digitalocean_spaces_bucket.miab" -> "[root] digitalocean_domain.miab"
		"[root] digitalocean_spaces_bucket.miab" -> "[root] var.do_region"
		"[root] digitalocean_ssh_key.miab" -> "[root] provider.digitalocean"
		"[root] digitalocean_ssh_key.miab" -> "[root] var.ssh_private_key"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] digitalocean_floating_ip_assignment.miab"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] digitalocean_record.box"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] digitalocean_record.ssh"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] output.floating_ip_address"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] var.droplet_region"
		"[root] output.floating_ip_address" -> "[root] digitalocean_floating_ip.miab"
		"[root] provider.digitalocean (close)" -> "[root] digitalocean_floating_ip_assignment.miab"
		"[root] provider.digitalocean (close)" -> "[root] digitalocean_record.box"
		"[root] provider.digitalocean (close)" -> "[root] digitalocean_record.ssh"
		"[root] provider.digitalocean" -> "[root] var.do_token"
		"[root] provider.digitalocean" -> "[root] var.spaces_access_id"
		"[root] provider.digitalocean" -> "[root] var.spaces_secret_key"
		"[root] provisioner.remote-exec (close)" -> "[root] digitalocean_droplet.miab"
		"[root] root" -> "[root] meta.count-boundary (EachMode fixup)"
		"[root] root" -> "[root] provider.digitalocean (close)"
		"[root] root" -> "[root] provisioner.remote-exec (close)"
	}
}

